// This file is generated by hsrcore_json_to_cpp from ${json_file_name}
#include <blockchain/GenesisJson.hpp>
#include <blockchain/GenesisState.hpp>

#include <string>
#include <fc/crypto/sha256.hpp>
#include <fc/io/raw.hpp>

namespace hsrcore { namespace blockchain {
static const unsigned char raw_genesis_config0[] =
{
  0x24, 0x6a, 0x78, 0x59, 0x00, 0x09, 0x05, 0x69, 0x6e, 0x69, 0x74, 0x30, 0x02, 
  0x16, 0x6b, 0x89, 0xde, 0x0d, 0x49, 0x91, 0x4e, 0x46, 0xec, 0xfd, 0x86, 0x95, 
  0x10, 0x47, 0x5f, 0x4d, 0x48, 0x35, 0x59, 0x9a, 0x09, 0xef, 0xf9, 0x25, 0xc7, 
  0x6d, 0xd7, 0x62, 0xb0, 0x22, 0x4b, 0x05, 0x69, 0x6e, 0x69, 0x74, 0x31, 0x02, 
  0xc8, 0xbb, 0x3f, 0xce, 0xbe, 0x88, 0x3e, 0x6a, 0x92, 0xe9, 0xb2, 0x08, 0xae, 
  0x0d, 0x9e, 0xe7, 0xb0, 0x18, 0x54, 0x35, 0x98, 0x6c, 0x2d, 0x69, 0x2c, 0x51, 
  0xe6, 0x35, 0x1b, 0xdd, 0x43, 0x2b, 0x05, 0x69, 0x6e, 0x69, 0x74, 0x32, 0x03, 
  0x56, 0xc1, 0x84, 0x76, 0xa4, 0x3a, 0x07, 0x0c, 0xf3, 0x35, 0x8e, 0xe5, 0x63, 
  0x76, 0x2f, 0x8e, 0x79, 0x68, 0xc8, 0xf9, 0x94, 0xca, 0xde, 0x80, 0x22, 0x45, 
  0xc3, 0xe3, 0x17, 0x3c, 0xb3, 0xad, 0x05, 0x69, 0x6e, 0x69, 0x74, 0x33, 0x02, 
  0x71, 0xae, 0xea, 0x33, 0xb6, 0x9f, 0xda, 0x93, 0xc2, 0xc5, 0x5b, 0xc9, 0xb9, 
  0x6f, 0x16, 0x12, 0x3e, 0xf8, 0xcd, 0x89, 0x41, 0x09, 0x0f, 0xf2, 0x6d, 0xe6, 
  0xdf, 0x30, 0xbc, 0x15, 0x6e, 0x2b, 0x05, 0x69, 0x6e, 0x69, 0x74, 0x34, 0x02, 
  0x65, 0x4c, 0x2b, 0x6d, 0xae, 0xd2, 0xfe, 0x60, 0x99, 0x86, 0x49, 0xbc, 0x90, 
  0x46, 0x81, 0x9f, 0x6b, 0x73, 0x19, 0x46, 0x2b, 0xcd, 0x91, 0xfb, 0x24, 0x75, 
  0x56, 0x2f, 0x95, 0xc7, 0xcc, 0x18, 0x05, 0x69, 0x6e, 0x69, 0x74, 0x35, 0x03, 
  0x84, 0x90, 0xa3, 0x87, 0xde, 0x92, 0x6b, 0x62, 0x12, 0x82, 0x52, 0x9c, 0xe6, 
  0x35, 0xea, 0xe0, 0x8e, 0xca, 0xe3, 0x4e, 0x67, 0x49, 0xd1, 0xb1, 0x08, 0xed, 
  0x9a, 0x46, 0x7f, 0xba, 0xa2, 0xfc, 0x05, 0x69, 0x6e, 0x69, 0x74, 0x36, 0x02, 
  0x78, 0xd6, 0xd0, 0x3f, 0xe9, 0x6e, 0x78, 0x56, 0xdf, 0x94, 0xf0, 0x26, 0x18, 
  0x37, 0x5b, 0xf6, 0x02, 0x5d, 0x45, 0xc6, 0xde, 0x98, 0x6d, 0xe1, 0x50, 0xed, 
  0xe1, 0xed, 0xb4, 0x23, 0x5c, 0x79, 0x05, 0x69, 0x6e, 0x69, 0x74, 0x37, 0x03, 
  0x34, 0x24, 0xfb, 0xfe, 0x05, 0xd6, 0xba, 0xf2, 0x8b, 0xbc, 0x1b, 0xa5, 0xd1, 
  0xaa, 0xdb, 0xd4, 0x68, 0x14, 0x9b, 0xc3, 0x25, 0x2c, 0x29, 0xb2, 0x94, 0x78, 
  0xe8, 0x0d, 0xea, 0x81, 0xc2, 0xf6, 0x05, 0x69, 0x6e, 0x69, 0x74, 0x38, 0x02, 
  0xcf, 0x2e, 0x0c, 0x55, 0xb0, 0x91, 0xa4, 0xa9, 0xf6, 0xee, 0x96, 0xd1, 0x1e, 
  0xec, 0xb8, 0x85, 0x13, 0xf7, 0x12, 0xcd, 0xb6, 0x56, 0x9f, 0x14, 0x38, 0xe6, 
  0xdd, 0x4e, 0xd5, 0xf7, 0x12, 0xac, 0x01, 0x22, 0x48, 0x44, 0x43, 0x47, 0x59, 
  0x64, 0x57, 0x7a, 0x58, 0x65, 0x62, 0x67, 0x52, 0x48, 0x48, 0x79, 0x51, 0x4c, 
  0x38, 0x5a, 0x68, 0x67, 0x6b, 0x71, 0x36, 0x66, 0x48, 0x46, 0x61, 0x6f, 0x42, 
  0x56, 0x59, 0x69, 0x00, 0xa0, 0x72, 0x4e, 0x18, 0x09, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

GenesisState get_builtin_genesis_block_config()
{
  unsigned total_size = sizeof(raw_genesis_config0);
  std::unique_ptr<char[]> buffer(new char[total_size]);
  char *ptr = buffer.get();
  memcpy(ptr, (const char*)raw_genesis_config0, sizeof(raw_genesis_config0));
  ptr += sizeof(raw_genesis_config0);
  return fc::raw::unpack<GenesisState>(buffer.get(), total_size);
}

fc::sha256 get_builtin_genesis_block_state_hash()
{
  fc::sha256::encoder encoder;
  encoder.write((const char*)raw_genesis_config0, sizeof(raw_genesis_config0));
  return encoder.result();
}

} } // end namespace hsrcore::blockchain
